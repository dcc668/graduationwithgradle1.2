<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		">
	
	<!--spring 与springMVC整合时，spring不扫描@Controller和@ ControllerAdvice -->
	<context:component-scan base-package="com.example">
		<context:exclude-filter type="annotation" 
			expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" 
			expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<!-- 配置数据源, 整合其他框架, 事务等. -->
	
	<!-- Spring AOP auto-proxy creation (required to support Shiro annotations) -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>

    <!--引入jdbc配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"
                                  ignore-resource-not-found="true" />
    <!-- MySQL-->
    <!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/graduation?characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>-->
    <!-- Oracle-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 配置sessionFactory -->
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" >
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />

        <!-- hibernate的相关属性配置 -->
        <property name="hibernateProperties">
            <value>
                <!-- 设置数据库方言 org.hibernate.dialect.MySQLDialect-->
                hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
                <!-- 设置自动创建|更新|验证数据库表结构 -->
                hibernate.hbm2ddl.auto=update
                <!-- 是否在控制台显示sql -->
                hibernate.show_sql=false
                <!-- 是否格式化sql，优化显示 -->
                hibernate.format_sql=true
                <!-- 是否开启二级缓存 -->
                hibernate.cache.use_second_level_cache=false
                <!-- 是否开启查询缓存 -->
                hibernate.cache.use_query_cache=false
                <!-- 数据库批量查询最大数 -->
                hibernate.jdbc.fetch_size=50
                <!-- 数据库批量更新、添加、删除操作最大数 -->
                hibernate.jdbc.batch_size=50
                <!-- 是否自动提交事务 -->
                hibernate.connection.autocommit=true
                <!-- 指定hibernate在何时释放JDBC连接 -->
                hibernate.connection.release_mode=auto
                <!-- 创建session方式 hibernate4.x 的方式 -->
<!--                 hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext -->
				 <!--hibernate.current_session_context_class=thread-->
                <!-- javax.persistence.validation.mode默认情况下是auto的，就是说如果不设置的话它是会自动去你的classpath下面找一个bean-validation**包
                    所以把它设置为none即可 -->
                javax.persistence.validation.mode=none
            </value>
        </property>
        <!-- 自动扫描实体对象 -->
        <property name="packagesToScan" value="com.example.graduation.*" />

    </bean>

    <!-- 设定transactionManager -->
    <!-- 配置Hibernate事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!--启动spring事务注解功能-->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <aop:config proxy-target-class="true">
        <aop:pointcut id="servicePointcut"
                      expression="execution(* com.example.graduation.serviceImp.*ServiceImp.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut" order="1" />
    </aop:config>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" />
            <tx:method name="save*" />
            <tx:method name="insert*" />
            <tx:method name="update*" />
            <tx:method name="delete*" />
            <tx:method name="create*" />
            <tx:method name="modify*" />
            <tx:method name="submit*" />
            <tx:method name="fetch*" />
            <tx:method name="execute*" />
            <tx:method name="validate*" />
            <tx:method name="pass*" />
            <tx:method name="back*" />
            <tx:method name="revert*" />
            <tx:method name="accept*" />
            <tx:method name="reject*" />
            <tx:method name="reset*" />
            <tx:method name="issue*" />
            <tx:method name="execute*" />
            <tx:method name="authorize*" />
            <tx:method name="export*" />
            <tx:method name="complete" />
            <tx:method name="upload*" />
            <tx:method name="unauthorize*" />
            <tx:method name="audit*" />
            <tx:method name="init*" read-only="true" />
            <tx:method name="find*" read-only="true" />
            <tx:method name="get*" read-only="true" />
            <tx:method name="load*" read-only="true" />
            <tx:method name="log*" propagation="REQUIRES_NEW" isolation="READ_COMMITTED" />
        </tx:attributes>
    </tx:advice>

    <!--文件上传-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
    </bean>
    
</beans>
